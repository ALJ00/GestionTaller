package bicicletasegibide.entity;
// Generated 15-nov-2019 18:09:33 by Hibernate Tools 3.2.1.GA


import bicicletasegibide.util.NewHibernateUtil;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import javax.swing.JOptionPane;
import org.hibernate.ObjectNotFoundException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.exception.ConstraintViolationException;

/**
 * Piezas generated by hbm2java
 */
public class Piezas  implements java.io.Serializable {


     private String codigopieza;
     private String nombre;
     private float precio;
     private String descripcion;
     private Set gestioneses = new HashSet(0);

    public Piezas() {
    }

    public Piezas(String codigopieza, String nombre, float precio, String descripcion) {
        this.codigopieza = codigopieza;
        this.nombre = nombre;
        this.precio = precio;
        this.descripcion = descripcion;
    }

    

	
    public Piezas(String codigopieza, String nombre, float precio) {
        this.codigopieza = codigopieza;
        this.nombre = nombre;
        this.precio = precio;
    }
    public Piezas(String codigopieza, String nombre, float precio, String descripcion, Set gestioneses) {
       this.codigopieza = codigopieza;
       this.nombre = nombre;
       this.precio = precio;
       this.descripcion = descripcion;
       this.gestioneses = gestioneses;
    }
   
    public String getCodigopieza() {
        return this.codigopieza;
    }
    
    public void setCodigopieza(String codigopieza) {
        this.codigopieza = codigopieza;
    }
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }
    public float getPrecio() {
        return this.precio;
    }
    
    public void setPrecio(float precio) {
        this.precio = precio;
    }
    public String getDescripcion() {
        return this.descripcion;
    }
    
    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }
    public Set getGestioneses() {
        return this.gestioneses;
    }
    
    public void setGestioneses(Set gestioneses) {
        this.gestioneses = gestioneses;
    }

    // ********************** consultas ********************************

    // insertar nueva pieza
    public boolean insertarPieza(Piezas piezanueva){

        SessionFactory sesion = NewHibernateUtil.getSessionFactory();
        Session session = sesion.openSession();
        Transaction tx = session.beginTransaction();

        boolean resp = false;

        try{

            session.save(piezanueva);

            try {
                tx.commit();

                resp = true;
                //JOptionPane.showMessageDialog(null, "PIEZA GUARDADA EN BD CORRECTAMENTE");

            } catch (ConstraintViolationException e) {

                System.out.println("PIEZA DUPLICADA");
                System.out.printf("MENSAJE:%s%n", e.getMessage());
                System.out.printf("COD ERROR:%d%n", e.getErrorCode());
                System.out.printf("ERROR SQL:%s%n",
                        e.getSQLException().getMessage());
                JOptionPane.showMessageDialog(null, "PIEZA DUPLICADO");

                resp = false;
            }


        }catch (Exception e){

            System.out.printf("MENSAJE:%s%n", e.getMessage());

            JOptionPane.showMessageDialog(null, "ERROR "+e.getMessage());

        }

        session.close();

        return resp;

    }

    // actualizar pieza
    public void modificarPieza(Piezas piezaModificada){

        SessionFactory sesion = NewHibernateUtil.getSessionFactory();
        Session session = sesion.openSession();
        Transaction tx = session.beginTransaction();

        Piezas pieza = new Piezas();

        try{

            pieza = (Piezas) session.load(Piezas.class, (String)piezaModificada.getCodigopieza());



            pieza.setCodigopieza(piezaModificada.getCodigopieza());
            pieza.setNombre(piezaModificada.getNombre());
            pieza.setPrecio(piezaModificada.getPrecio());
            pieza.setDescripcion(piezaModificada.getDescripcion());

            session.update(pieza);

           try{

               tx.commit();
               JOptionPane.showMessageDialog(null, "PIEZA MODIFICADA CORRECTAMENTE");

           }catch(Exception e){
               JOptionPane.showMessageDialog(null, e.getMessage());

           }


        }catch(ObjectNotFoundException o){

            JOptionPane.showMessageDialog(null, "NO EXISTE LA PIEZA");

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());

        }

        session.close();

    }

    // listar las piezas
    public ArrayList<Piezas> listarPiezas(){

        SessionFactory sesion = NewHibernateUtil.getSessionFactory();
        Session session = sesion.openSession();

        ArrayList arrayListPiezas = new ArrayList();

        // query
        Query q = session.createQuery("from Piezas");

        List <Piezas> lista = q.list();

        // Obtengo un Iterador y recorro la lista
        Iterator <Piezas> iter = lista.iterator();

        lista.size();

        while(iter.hasNext()){

            //extraer el objeto
            Piezas pieza = (Piezas) iter.next();
            arrayListPiezas.add(pieza);

        }


        return arrayListPiezas;
    }

    // borrar pieza
    public void borrarPieza(Piezas piezaAborrar){

        SessionFactory sesion = NewHibernateUtil.getSessionFactory();
        Session session = sesion.openSession();
        Transaction tx = session.beginTransaction();

        //PIEZA A ELIMINAR
        Piezas de = (Piezas) session.load(Piezas.class, (String) piezaAborrar.getCodigopieza());

        try{
            session.delete(de);
            tx.commit();
            JOptionPane.showMessageDialog(null, "PIEZA BORRADA CORRECTAMENTE");
        } catch (ObjectNotFoundException o){

            System.out.println ("NO EXISTE LA PIEZA");
            JOptionPane.showMessageDialog(null, "NO EXISTE LA PIEZA");

        } catch (ConstraintViolationException c){

            System.out.println ("NO SE PUEDE ELIMINAR");
            JOptionPane.showMessageDialog(null, "NO SE PUEDE ELIMINAR");

        } catch (Exception e){

            System.out.println ("ERROR NO CONTROLADO");
            JOptionPane.showMessageDialog(null, "ERROR NO CONTROLADO");

            e.printStackTrace();
        }

        session.close();
    }




}


